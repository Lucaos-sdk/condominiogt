# ======================================
# CONDOMINIOGT - COMMON LOCATIONS
# Sistema de Gestão de Condomínios
# ======================================

# Security Headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Content-Security-Policy $csp_policy always;
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

# API Routes
location /api/ {
    # Rate limiting for API
    limit_req zone=api burst=20 nodelay;
    
    # Proxy headers
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Timeout settings
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Security
    proxy_hide_header X-Powered-By;
    
    # CORS headers for API
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials "true";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }
}

# Special rate limiting for login endpoint
location /api/auth/login {
    limit_req zone=login burst=3 nodelay;
    
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Additional security for login
    proxy_hide_header X-Powered-By;
    add_header X-Frame-Options "DENY" always;
}

# WebSocket support for real-time notifications
location /socket.io/ {
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket timeout settings
    proxy_read_timeout 86400;
}

# Static files with caching
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    proxy_pass http://frontend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    
    # Cache settings
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header X-Content-Type-Options "nosniff" always;
    
    # Security
    add_header X-Frame-Options "DENY" always;
}

# Frontend routes (React Router)
location / {
    limit_req zone=general burst=10 nodelay;
    
    proxy_pass http://frontend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Handle React Router
    proxy_intercept_errors on;
    error_page 404 = @fallback;
}

# Fallback for React Router
location @fallback {
    proxy_pass http://frontend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
}

# Block sensitive files
location ~ /\.(htaccess|htpasswd|env|git) {
    deny all;
    return 404;
}

# Block access to backup files
location ~ \.(sql|backup|bak|old)$ {
    deny all;
    return 404;
}

# Security.txt (optional)
location = /.well-known/security.txt {
    return 200 "Contact: admin@localhost\nExpires: 2025-12-31T23:59:59.000Z\nEncryption: https://keys.openpgp.org/\nPreferred-Languages: pt-BR, en\n";
    add_header Content-Type text/plain;
}